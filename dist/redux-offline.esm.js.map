{"version":3,"file":"redux-offline.esm.js","sources":["../src/actions.ts","../src/reducer.ts","../src/middleware.ts","../src/index.ts"],"sourcesContent":["export const PERSIST_REHYDRATE = 'persist/REHYDRATE';\nexport const OFFLINE_SERIALIZE = 'Offline/OFFLINE_SERIALIZE';\nexport const OFFLINE_STATUS_CHANGED = 'Offline/OFFLINE_STATUS_CHANGED';\nexport const OFFLINE_BUSY = 'Offline/OFFLINE_BUSY';\nexport const OFFLINE_SCHEDULE_RETRY = 'Offline/OFFLINE_SCHEDULE_RETRY';\nexport const OFFLINE_RESET_STATE = 'Offline/OFFLINE_RESET_STATE';\n","import { OFFLINE_SERIALIZE } from './actions';\n\nconst initialState = { outbox: [], busy: false, online: true };\n\nfunction offlineReducer(state = initialState, action) {\n  if (action.type === OFFLINE_SERIALIZE) {\n    const { status, retryScheduled, ...newState } = action.payload;\n    const online = status !== 'paused';\n    const busy = status === 'busy';\n    return {\n      ...state,\n      ...newState,\n      retryScheduled: Boolean(retryScheduled),\n      online,\n      busy\n    };\n  }\n  return state;\n}\n\nexport default offlineReducer;\n","import { PERSIST_REHYDRATE, OFFLINE_RESET_STATE } from './actions';\n\nfunction createReduxOfflineMiddleware(offlineSideEffects) {\n  const reduxOfflineMiddleware = () => next => action => {\n    next(action);\n\n    if (action.type === PERSIST_REHYDRATE) {\n      offlineSideEffects.rehydrateState(action.payload?.offline ?? {});\n    }\n\n    if (action.type === OFFLINE_RESET_STATE) {\n      offlineSideEffects.reset();\n    }\n\n    offlineSideEffects.addSideEffect(action);\n  };\n\n  return reduxOfflineMiddleware;\n}\n\nexport default createReduxOfflineMiddleware;\n","import { offlineSideEffects as createOfflineSideEffects } from '@redux-offline/offline-side-effects';\nimport {\n  OFFLINE_STATUS_CHANGED,\n  OFFLINE_BUSY,\n  OFFLINE_SCHEDULE_RETRY,\n  OFFLINE_SERIALIZE\n} from './actions';\nimport offlineReducer from './reducer';\nimport createReduxOfflineMiddleware from './middleware';\n\nexport const createOffline = (options, buildListeners = () => ({})) => {\n  let offlineSideEffects = null;\n\n  const enhanceStore = createStore => (reducer, preloadedState, enhancer) => {\n    const store = createStore(reducer, preloadedState, enhancer);\n    let prevStatus = null;\n\n    const listeners = {\n      onCommit: (payload, commit) => store.dispatch({ ...commit, payload }),\n      onRollback: (payload, rollback) =>\n        store.dispatch({ ...rollback, payload }),\n      onStatusChange: status => {\n        if (status === 'paused') {\n          store.dispatch({ type: OFFLINE_STATUS_CHANGED, payload: false });\n        } else {\n          if (prevStatus === 'paused') {\n            store.dispatch({ type: OFFLINE_STATUS_CHANGED, payload: true });\n          }\n          store.dispatch({ type: OFFLINE_BUSY, payload: status === 'busy' });\n        }\n        prevStatus = status;\n      },\n      onSerialize: state => {\n        store.dispatch({ type: OFFLINE_SERIALIZE, payload: state });\n      },\n      onRetry: delay =>\n        store.dispatch({ type: OFFLINE_SCHEDULE_RETRY, payload: { delay } }),\n      // @ts-ignore\n      ...buildListeners(store)\n    };\n\n    offlineSideEffects = createOfflineSideEffects(listeners, options);\n\n    // launch network detector\n    if (options.detectNetwork) {\n      options.detectNetwork(online => offlineSideEffects.setPaused(!online));\n    }\n\n    return store;\n  };\n\n  const reduxOfflineMiddleware = createReduxOfflineMiddleware(\n    offlineSideEffects\n  );\n\n  return {\n    enhanceStore,\n    reducer: offlineReducer,\n    middleware: reduxOfflineMiddleware\n  };\n};\n"],"names":["PERSIST_REHYDRATE","OFFLINE_SERIALIZE","OFFLINE_STATUS_CHANGED","OFFLINE_BUSY","OFFLINE_SCHEDULE_RETRY","OFFLINE_RESET_STATE","initialState","outbox","busy","online","offlineReducer","state","action","type","payload","status","retryScheduled","newState","Boolean","createReduxOfflineMiddleware","offlineSideEffects","reduxOfflineMiddleware","next","rehydrateState","offline","reset","addSideEffect","createOffline","options","buildListeners","enhanceStore","createStore","reducer","preloadedState","enhancer","store","prevStatus","listeners","onCommit","commit","dispatch","onRollback","rollback","onStatusChange","onSerialize","onRetry","delay","createOfflineSideEffects","detectNetwork","setPaused","middleware"],"mappings":"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"}